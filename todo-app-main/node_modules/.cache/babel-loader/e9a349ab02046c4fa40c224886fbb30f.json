{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilizator\\\\Desktop\\\\4.3. todo-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n// App.jsx\nimport React, { useState } from \"react\";\nimport Card from \"./components/card/Card\";\nimport TodoItem from \"./components/todo-item/TodoItem\";\nimport Input from \"./components/input/Input\";\nimport TextArea from \"./components/input/TextArea\";\nimport Button from \"./components/button/Button\";\nimport Modal from \"./components/modal/Modal\"; // Importăm componenta Modal\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TODOS_MOCK = [{\n  id: \"1\",\n  title: \"Todo 1\",\n  description: \"1Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n  completed: false\n}, {\n  id: \"2\",\n  title: \"Todo 2\",\n  description: \"2Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n  completed: false\n}, {\n  id: \"3\",\n  title: \"Todo 3\",\n  description: \"3Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n  completed: true\n}, {\n  id: \"4\",\n  title: \"Todo 4\",\n  description: \"4Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n  completed: true\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(TODOS_MOCK);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\"\n  }); // State pentru valorile formularului\n\n  const [isModalOpen, setIsModalOpen] = useState(false); // State pentru gestionarea deschiderii/inchiderii modalului\n  // Funcția care va fi apelată la trimiterea formularului\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newTodo = {\n      id: Date.now().toString(),\n      // Generăm un id unic\n      title: formData.title,\n      description: formData.description,\n      completed: false\n    };\n    setTodos([...todos, newTodo]); // Adăugăm noua activitate în lista de activități\n\n    setFormData({\n      title: \"\",\n      description: \"\"\n    }); // Resetăm valorile formularului\n\n    setIsModalOpen(false); // Închidem modalul\n  };\n\n  const handleDelete = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsModalOpen(true),\n          children: \"Add +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-container\",\n          children: todos.filter(todo => !todo.completed).map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n            todo: todo,\n            onDelete: handleDelete\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-container\",\n          children: todos.filter(todo => todo.completed).map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n            todo: todo,\n            onDelete: handleDelete\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: formData.title,\n          onChange: e => setFormData({ ...formData,\n            title: e.target.value\n          }),\n          placeholder: \"Title\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          value: formData.description,\n          onChange: e => setFormData({ ...formData,\n            description: e.target.value\n          }),\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4INzI7K9Xb2T5ZN6JWHuieB1XPM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Card","TodoItem","Input","TextArea","Button","Modal","TODOS_MOCK","id","title","description","completed","App","todos","setTodos","formData","setFormData","isModalOpen","setIsModalOpen","handleSubmit","e","preventDefault","newTodo","Date","now","toString","handleDelete","updatedTodos","filter","todo","map","target","value"],"sources":["C:/Users/Utilizator/Desktop/4.3. todo-app/src/App.jsx"],"sourcesContent":["// App.jsx\nimport React, { useState } from \"react\";\nimport Card from \"./components/card/Card\";\nimport TodoItem from \"./components/todo-item/TodoItem\";\nimport Input from \"./components/input/Input\";\nimport TextArea from \"./components/input/TextArea\";\nimport Button from \"./components/button/Button\";\nimport Modal from \"./components/modal/Modal\"; // Importăm componenta Modal\nimport \"./App.css\";\n\nconst TODOS_MOCK = [\n  {\n    id: \"1\",\n    title: \"Todo 1\",\n    description: \"1Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n    completed: false,\n  },\n  {\n    id: \"2\",\n    title: \"Todo 2\",\n    description: \"2Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n    completed: false,\n  },\n  {\n    id: \"3\",\n    title: \"Todo 3\",\n    description: \"3Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n    completed: true,\n  },\n  {\n    id: \"4\",\n    title: \"Todo 4\",\n    description: \"4Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n    completed: true,\n  },\n];\n\nfunction App() {\n  const [todos, setTodos] = useState(TODOS_MOCK);\n  const [formData, setFormData] = useState({ title: \"\", description: \"\" }); // State pentru valorile formularului\n  const [isModalOpen, setIsModalOpen] = useState(false); // State pentru gestionarea deschiderii/inchiderii modalului\n\n  // Funcția care va fi apelată la trimiterea formularului\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      id: Date.now().toString(), // Generăm un id unic\n      title: formData.title,\n      description: formData.description,\n      completed: false,\n    };\n    setTodos([...todos, newTodo]); // Adăugăm noua activitate în lista de activități\n    setFormData({ title: \"\", description: \"\" }); // Resetăm valorile formularului\n    setIsModalOpen(false); // Închidem modalul\n  };\n\n  const handleDelete = (id) => {\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-container\">\n        <Card>\n          <h2>Create Todo</h2>\n          <Button onClick={() => setIsModalOpen(true)}>Add +</Button>{\" \"}\n          {/* Deschidem modalul la click pe buton */}\n        </Card>\n\n        <Card>\n          <h1>My todos</h1>\n          <div className=\"list-container\">\n            {todos\n              .filter((todo) => !todo.completed)\n              .map((todo) => (\n                <TodoItem key={todo.id} todo={todo} onDelete={handleDelete} />\n              ))}\n          </div>\n\n          <div className=\"separator\"></div>\n\n          <h2>Completed</h2>\n          <div className=\"list-container\">\n            {todos\n              .filter((todo) => todo.completed)\n              .map((todo) => (\n                <TodoItem key={todo.id} todo={todo} onDelete={handleDelete} />\n              ))}\n          </div>\n        </Card>\n      </div>\n      {/* Modal pentru formularul de adăugare a activităților */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <h2>Create Todo</h2>\n        <form onSubmit={handleSubmit}>\n          <Input\n            value={formData.title}\n            onChange={(e) =>\n              setFormData({ ...formData, title: e.target.value })\n            }\n            placeholder=\"Title\"\n            type=\"text\"\n          />\n          <TextArea\n            value={formData.description}\n            onChange={(e) =>\n              setFormData({ ...formData, description: e.target.value })\n            }\n            placeholder=\"Description\"\n          />\n          <Button type=\"submit\">Create</Button>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}