{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilizator\\\\Desktop\\\\4.3. todo-app\\\\src\\\\components\\\\todo-item\\\\TodoItem.jsx\",\n    _s = $RefreshSig$();\n\n// App.jsx\nimport React, { useState } from \"react\";\nimport Card from \"./components/card/Card\";\nimport TodoItem from \"./components/todo-item/TodoItem\";\nimport Input from \"./components/input/Input\";\nimport TextArea from \"./components/input/TextArea\";\nimport Button from \"./components/button/Button\";\nimport Modal from \"./components/modal/Modal\"; // TODOS_MOCK și alte constante\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(TODOS_MOCK);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\"\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null); // State pentru activitatea în curs de editare\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (editingTodo) {\n      // Actualizăm activitatea existentă dacă suntem în modul de editare\n      const updatedTodos = todos.map(todo => todo.id === editingTodo.id ? { ...todo,\n        ...formData\n      } : todo);\n      setTodos(updatedTodos);\n      setEditingTodo(null); // Oprim modul de editare\n    } else {\n      // Altfel, creăm o activitate nouă\n      const newTodo = {\n        id: Date.now().toString(),\n        title: formData.title,\n        description: formData.description,\n        completed: false\n      };\n      setTodos([...todos, newTodo]);\n    }\n\n    setFormData({\n      title: \"\",\n      description: \"\"\n    });\n    setIsModalOpen(false);\n  }; // Funcție pentru deschiderea modalului de editare și preluarea datelor corespunzătoare\n\n\n  const handleEdit = todo => {\n    setEditingTodo(todo);\n    setFormData({\n      title: todo.title,\n      description: todo.description\n    });\n    setIsModalOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsModalOpen(true),\n          children: \"Add +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-container\",\n          children: todos.filter(todo => !todo.completed).map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n            todo: todo,\n            onEdit: () => handleEdit(todo) // Trimiterea funcției de editare ca prop către TodoItem\n\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-container\",\n          children: todos.filter(todo => todo.completed).map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n            todo: todo,\n            onEdit: () => handleEdit(todo) // Trimiterea funcției de editare ca prop către TodoItem\n\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editingTodo ? \"Edit Todo\" : \"Create Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: formData.title,\n          onChange: e => setFormData({ ...formData,\n            title: e.target.value\n          }),\n          placeholder: \"Title\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          value: formData.description,\n          onChange: e => setFormData({ ...formData,\n            description: e.target.value\n          }),\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: editingTodo ? \"Update\" : \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"99dhordf7p0o05VkHrVVIVsuo4s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Card","TodoItem","Input","TextArea","Button","Modal","App","todos","setTodos","TODOS_MOCK","formData","setFormData","title","description","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","handleSubmit","e","preventDefault","updatedTodos","map","todo","id","newTodo","Date","now","toString","completed","handleEdit","filter","target","value"],"sources":["C:/Users/Utilizator/Desktop/4.3. todo-app/src/components/todo-item/TodoItem.jsx"],"sourcesContent":["// App.jsx\nimport React, { useState } from \"react\";\nimport Card from \"./components/card/Card\";\nimport TodoItem from \"./components/todo-item/TodoItem\";\nimport Input from \"./components/input/Input\";\nimport TextArea from \"./components/input/TextArea\";\nimport Button from \"./components/button/Button\";\nimport Modal from \"./components/modal/Modal\";\n\n// TODOS_MOCK și alte constante\n\nfunction App() {\n  const [todos, setTodos] = useState(TODOS_MOCK);\n  const [formData, setFormData] = useState({ title: \"\", description: \"\" });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null); // State pentru activitatea în curs de editare\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (editingTodo) {\n      // Actualizăm activitatea existentă dacă suntem în modul de editare\n      const updatedTodos = todos.map((todo) =>\n        todo.id === editingTodo.id ? { ...todo, ...formData } : todo\n      );\n      setTodos(updatedTodos);\n      setEditingTodo(null); // Oprim modul de editare\n    } else {\n      // Altfel, creăm o activitate nouă\n      const newTodo = {\n        id: Date.now().toString(),\n        title: formData.title,\n        description: formData.description,\n        completed: false,\n      };\n      setTodos([...todos, newTodo]);\n    }\n    setFormData({ title: \"\", description: \"\" });\n    setIsModalOpen(false);\n  };\n\n  // Funcție pentru deschiderea modalului de editare și preluarea datelor corespunzătoare\n  const handleEdit = (todo) => {\n    setEditingTodo(todo);\n    setFormData({ title: todo.title, description: todo.description });\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-container\">\n        <Card>\n          <h2>Create Todo</h2>\n          <Button onClick={() => setIsModalOpen(true)}>Add +</Button>{\" \"}\n        </Card>\n\n        <Card>\n          <h1>My todos</h1>\n          <div className=\"list-container\">\n            {todos\n              .filter((todo) => !todo.completed)\n              .map((todo) => (\n                <TodoItem\n                  key={todo.id}\n                  todo={todo}\n                  onEdit={() => handleEdit(todo)} // Trimiterea funcției de editare ca prop către TodoItem\n                />\n              ))}\n          </div>\n\n          <div className=\"separator\"></div>\n\n          <h2>Completed</h2>\n          <div className=\"list-container\">\n            {todos\n              .filter((todo) => todo.completed)\n              .map((todo) => (\n                <TodoItem\n                  key={todo.id}\n                  todo={todo}\n                  onEdit={() => handleEdit(todo)} // Trimiterea funcției de editare ca prop către TodoItem\n                />\n              ))}\n          </div>\n        </Card>\n      </div>\n\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <h2>{editingTodo ? \"Edit Todo\" : \"Create Todo\"}</h2>\n        <form onSubmit={handleSubmit}>\n          <Input\n            value={formData.title}\n            onChange={(e) =>\n              setFormData({ ...formData, title: e.target.value })\n            }\n            placeholder=\"Title\"\n            type=\"text\"\n          />\n          <TextArea\n            value={formData.description}\n            onChange={(e) =>\n              setFormData({ ...formData, description: e.target.value })\n            }\n            placeholder=\"Description\"\n          />\n          <Button type=\"submit\">{editingTodo ? \"Update\" : \"Create\"}</Button>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}